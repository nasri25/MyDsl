/*
 * generated by Xtext 2.19.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSchoolModel
entryRuleSchoolModel
:
{ before(grammarAccess.getSchoolModelRule()); }
	 ruleSchoolModel
{ after(grammarAccess.getSchoolModelRule()); } 
	 EOF 
;

// Rule SchoolModel
ruleSchoolModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSchoolModelAccess().getSchoolsAssignment()); }
		(rule__SchoolModel__SchoolsAssignment)*
		{ after(grammarAccess.getSchoolModelAccess().getSchoolsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSchool
entryRuleSchool
:
{ before(grammarAccess.getSchoolRule()); }
	 ruleSchool
{ after(grammarAccess.getSchoolRule()); } 
	 EOF 
;

// Rule School
ruleSchool 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSchoolAccess().getGroup()); }
		(rule__School__Group__0)
		{ after(grammarAccess.getSchoolAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePerson
entryRulePerson
:
{ before(grammarAccess.getPersonRule()); }
	 rulePerson
{ after(grammarAccess.getPersonRule()); } 
	 EOF 
;

// Rule Person
rulePerson 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPersonAccess().getAlternatives()); }
		(rule__Person__Alternatives)
		{ after(grammarAccess.getPersonAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStudent
entryRuleStudent
:
{ before(grammarAccess.getStudentRule()); }
	 ruleStudent
{ after(grammarAccess.getStudentRule()); } 
	 EOF 
;

// Rule Student
ruleStudent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStudentAccess().getGroup()); }
		(rule__Student__Group__0)
		{ after(grammarAccess.getStudentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTeacher
entryRuleTeacher
:
{ before(grammarAccess.getTeacherRule()); }
	 ruleTeacher
{ after(grammarAccess.getTeacherRule()); } 
	 EOF 
;

// Rule Teacher
ruleTeacher 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTeacherAccess().getGroup()); }
		(rule__Teacher__Group__0)
		{ after(grammarAccess.getTeacherAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPersonAccess().getStudentParserRuleCall_0()); }
		ruleStudent
		{ after(grammarAccess.getPersonAccess().getStudentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPersonAccess().getTeacherParserRuleCall_1()); }
		ruleTeacher
		{ after(grammarAccess.getPersonAccess().getTeacherParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__School__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__School__Group__0__Impl
	rule__School__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__School__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchoolAccess().getSchoolKeyword_0()); }
	'school'
	{ after(grammarAccess.getSchoolAccess().getSchoolKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__School__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__School__Group__1__Impl
	rule__School__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__School__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchoolAccess().getNameAssignment_1()); }
	(rule__School__NameAssignment_1)
	{ after(grammarAccess.getSchoolAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__School__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__School__Group__2__Impl
	rule__School__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__School__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchoolAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSchoolAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__School__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__School__Group__3__Impl
	rule__School__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__School__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchoolAccess().getPersonsAssignment_3()); }
	(rule__School__PersonsAssignment_3)*
	{ after(grammarAccess.getSchoolAccess().getPersonsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__School__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__School__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__School__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchoolAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSchoolAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Student__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Student__Group__0__Impl
	rule__Student__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStudentAccess().getStudentKeyword_0()); }
	'student'
	{ after(grammarAccess.getStudentAccess().getStudentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Student__Group__1__Impl
	rule__Student__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStudentAccess().getNameAssignment_1()); }
	(rule__Student__NameAssignment_1)
	{ after(grammarAccess.getStudentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Student__Group__2__Impl
	rule__Student__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStudentAccess().getRegistrationNumKeyword_2()); }
	'registrationNum'
	{ after(grammarAccess.getStudentAccess().getRegistrationNumKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Student__Group__3__Impl
	rule__Student__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStudentAccess().getRegistrationNumAssignment_3()); }
	(rule__Student__RegistrationNumAssignment_3)
	{ after(grammarAccess.getStudentAccess().getRegistrationNumAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Student__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStudentAccess().getGroup_4()); }
	(rule__Student__Group_4__0)?
	{ after(grammarAccess.getStudentAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Student__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Student__Group_4__0__Impl
	rule__Student__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStudentAccess().getLeftCurlyBracketKeyword_4_0()); }
	'{'
	{ after(grammarAccess.getStudentAccess().getLeftCurlyBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Student__Group_4__1__Impl
	rule__Student__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStudentAccess().getTeachersAssignment_4_1()); }
	(rule__Student__TeachersAssignment_4_1)
	{ after(grammarAccess.getStudentAccess().getTeachersAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Student__Group_4__2__Impl
	rule__Student__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStudentAccess().getGroup_4_2()); }
	(rule__Student__Group_4_2__0)*
	{ after(grammarAccess.getStudentAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Student__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStudentAccess().getRightCurlyBracketKeyword_4_3()); }
	'}'
	{ after(grammarAccess.getStudentAccess().getRightCurlyBracketKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Student__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Student__Group_4_2__0__Impl
	rule__Student__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStudentAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getStudentAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Student__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStudentAccess().getTeachersAssignment_4_2_1()); }
	(rule__Student__TeachersAssignment_4_2_1)
	{ after(grammarAccess.getStudentAccess().getTeachersAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Teacher__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Teacher__Group__0__Impl
	rule__Teacher__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Teacher__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTeacherAccess().getTeacherKeyword_0()); }
	'teacher'
	{ after(grammarAccess.getTeacherAccess().getTeacherKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Teacher__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Teacher__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Teacher__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTeacherAccess().getNameAssignment_1()); }
	(rule__Teacher__NameAssignment_1)
	{ after(grammarAccess.getTeacherAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SchoolModel__SchoolsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchoolModelAccess().getSchoolsSchoolParserRuleCall_0()); }
		ruleSchool
		{ after(grammarAccess.getSchoolModelAccess().getSchoolsSchoolParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__School__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchoolAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSchoolAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__School__PersonsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchoolAccess().getPersonsPersonParserRuleCall_3_0()); }
		rulePerson
		{ after(grammarAccess.getSchoolAccess().getPersonsPersonParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStudentAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getStudentAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__RegistrationNumAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStudentAccess().getRegistrationNumINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getStudentAccess().getRegistrationNumINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__TeachersAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStudentAccess().getTeachersTeacherCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getStudentAccess().getTeachersTeacherSTRINGTerminalRuleCall_4_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getStudentAccess().getTeachersTeacherSTRINGTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getStudentAccess().getTeachersTeacherCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Student__TeachersAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStudentAccess().getTeachersTeacherCrossReference_4_2_1_0()); }
		(
			{ before(grammarAccess.getStudentAccess().getTeachersTeacherSTRINGTerminalRuleCall_4_2_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getStudentAccess().getTeachersTeacherSTRINGTerminalRuleCall_4_2_1_0_1()); }
		)
		{ after(grammarAccess.getStudentAccess().getTeachersTeacherCrossReference_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Teacher__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTeacherAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTeacherAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
