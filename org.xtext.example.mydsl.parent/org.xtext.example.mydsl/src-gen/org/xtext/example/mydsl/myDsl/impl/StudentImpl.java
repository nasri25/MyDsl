/**
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.Student;
import org.xtext.example.mydsl.myDsl.Teacher;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Student</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.StudentImpl#getRegistrationNum <em>Registration Num</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.StudentImpl#getTeachers <em>Teachers</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StudentImpl extends PersonImpl implements Student
{
  /**
   * The default value of the '{@link #getRegistrationNum() <em>Registration Num</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRegistrationNum()
   * @generated
   * @ordered
   */
  protected static final int REGISTRATION_NUM_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getRegistrationNum() <em>Registration Num</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRegistrationNum()
   * @generated
   * @ordered
   */
  protected int registrationNum = REGISTRATION_NUM_EDEFAULT;

  /**
   * The cached value of the '{@link #getTeachers() <em>Teachers</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTeachers()
   * @generated
   * @ordered
   */
  protected EList<Teacher> teachers;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StudentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.STUDENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getRegistrationNum()
  {
    return registrationNum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRegistrationNum(int newRegistrationNum)
  {
    int oldRegistrationNum = registrationNum;
    registrationNum = newRegistrationNum;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STUDENT__REGISTRATION_NUM, oldRegistrationNum, registrationNum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Teacher> getTeachers()
  {
    if (teachers == null)
    {
      teachers = new EObjectResolvingEList<Teacher>(Teacher.class, this, MyDslPackage.STUDENT__TEACHERS);
    }
    return teachers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.STUDENT__REGISTRATION_NUM:
        return getRegistrationNum();
      case MyDslPackage.STUDENT__TEACHERS:
        return getTeachers();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.STUDENT__REGISTRATION_NUM:
        setRegistrationNum((Integer)newValue);
        return;
      case MyDslPackage.STUDENT__TEACHERS:
        getTeachers().clear();
        getTeachers().addAll((Collection<? extends Teacher>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.STUDENT__REGISTRATION_NUM:
        setRegistrationNum(REGISTRATION_NUM_EDEFAULT);
        return;
      case MyDslPackage.STUDENT__TEACHERS:
        getTeachers().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.STUDENT__REGISTRATION_NUM:
        return registrationNum != REGISTRATION_NUM_EDEFAULT;
      case MyDslPackage.STUDENT__TEACHERS:
        return teachers != null && !teachers.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (registrationNum: ");
    result.append(registrationNum);
    result.append(')');
    return result.toString();
  }

} //StudentImpl
